-- MySQL Script generated by MySQL Workbench
-- Thu Jan  4 14:55:47 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema bdinventory
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema bdinventory
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bdinventory` DEFAULT CHARACTER SET utf8 ;
USE `bdinventory` ;

-- -----------------------------------------------------
-- Table `bdinventory`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bdinventory`.`roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bdinventory`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bdinventory`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(200) NULL,
  `mail` VARCHAR(200) NULL,
  `password` VARCHAR(200) NULL,
  `date_created` DATE NULL,
  `date_update` DATE NULL,
  `roles_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `correo_UNIQUE` (`mail` ASC) VISIBLE,
  INDEX `fk_users_roles1_idx` (`roles_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_roles1`
    FOREIGN KEY (`roles_id`)
    REFERENCES `bdinventory`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bdinventory`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bdinventory`.`products` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `num_lot` INT NULL,
  `name` VARCHAR(200) NULL,
  `price` INT NULL,
  `amount` INT NULL,
  `date_entry` DATE NULL,
  `date_update` DATE NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bdinventory`.`billing`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bdinventory`.`billing` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cantidad` INT NULL,
  `price` INT NULL,
  `cod_purchase` INT NULL,
  `date_created` DATETIME NULL,
  `users_id` INT NOT NULL,
  `products_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_billing_users_idx` (`users_id` ASC) VISIBLE,
  INDEX `fk_billing_products1_idx` (`products_id` ASC) VISIBLE,
  CONSTRAINT `fk_billing_users`
    FOREIGN KEY (`users_id`)
    REFERENCES `bdinventory`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_billing_products1`
    FOREIGN KEY (`products_id`)
    REFERENCES `bdinventory`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- Eliminar llave foránea
ALTER TABLE `bdinventory`.`billing`
DROP FOREIGN KEY `fk_billing_users`;

-- Modificar la columna `id` para que sea autoincremental
ALTER TABLE `bdinventory`.`users`
MODIFY COLUMN `id` INT NOT NULL AUTO_INCREMENT;

-- Volver a crear la llave foránea
ALTER TABLE `bdinventory`.`billing`
ADD CONSTRAINT `fk_billing_users`
FOREIGN KEY (`users_id`)
REFERENCES `bdinventory`.`users` (`id`)
ON DELETE NO ACTION
ON UPDATE NO ACTION;